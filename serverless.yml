service: serverless-nestjs

provider:
  name: aws
  runtime: nodejs16.x
  region: us-west-2
  stage: dev

  environment: 
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    NODE_OPTIONS: --enable-source-maps --stack-trace-limit=1000
  iam: 
      role: 
        statements: 
            - Effect: 'Allow'
              Action: 
                - 'dynamodb:DescribeTable'
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'

              Resource: arn:aws:dynamodb:us-west-2:*:table/ProductsTable

custom: 
    esbuild: 
      bundle: true
      minify: false
      sourcemap: true
      exclude: aws-sdk
      target: node16
      define: 'require.resolve: undefined'
      platform: node
      concurrency: 10

    dynamodb: 
      start: 
        port: 5000
        inMemory: true
        migrate: true
    
    optimize:
        external: ['swagger-ui-dist']

resources: 
    Resources: 
      ProductsTable: 
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ProductsTable
          AttributeDefinitions: 
              - AttributeName: id
                AttributeType: S

          KeySchema: 
              - AttributeName: id
                KeyType: HASH

          ProvisionedThroughput: 
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1 


plugins:
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-plugin-optimize
package:
  exclude:
    - .git/**
    - src/**
    - test/**
    - e2e/**
    - nodemon.json
    - README.md

functions:
  index:
    handler: dist/index.handler
    name: ${sls:stage}-serverless
    events:
    - http:
        cors: true
        path: '/swapi/people'
        method: get
    - http:
        cors: true
        path: '/swapi/films'
        method: get
    - http:
        cors: true
        path: '/swapi/species'
        method: get
    - http:
        cors: true
        path: '/swapi/starships'
        method: get
    - http:
        cors: true
        path: '/swapi/vehicles'
        method: get
    - http:
        cors: true
        path: '/swapi/planets'
        method: get
    - http:
        cors: true
        path: '/product'
        method: get
    - http:
        cors: true
        path: '/product'
        method: post
    - http:
        cors: true
        path: '/product/{id}'
        method: get
    - http:
        cors: true
        path: '/product/{id}'
        method: delete
    - http:
        method: ANY
        path: '/{proxy+}'
          